//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MedievalWarfare.Client.Proxy {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxy.IServerMethods", CallbackContract=typeof(MedievalWarfare.Client.Proxy.IServerMethodsCallback))]
    public interface IServerMethods {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/Join", ReplyAction="http://tempuri.org/IServerMethods/JoinResponse")]
        void Join(MedievalWarfare.Common.Player info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/Join", ReplyAction="http://tempuri.org/IServerMethods/JoinResponse")]
        System.Threading.Tasks.Task JoinAsync(MedievalWarfare.Common.Player info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/Leave", ReplyAction="http://tempuri.org/IServerMethods/LeaveResponse")]
        void Leave(MedievalWarfare.Common.Player info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/Leave", ReplyAction="http://tempuri.org/IServerMethods/LeaveResponse")]
        System.Threading.Tasks.Task LeaveAsync(MedievalWarfare.Common.Player info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/GetGameState", ReplyAction="http://tempuri.org/IServerMethods/GetGameStateResponse")]
        MedievalWarfare.Common.Map GetGameState();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/GetGameState", ReplyAction="http://tempuri.org/IServerMethods/GetGameStateResponse")]
        System.Threading.Tasks.Task<MedievalWarfare.Common.Map> GetGameStateAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/EndTurn", ReplyAction="http://tempuri.org/IServerMethods/EndTurnResponse")]
        void EndTurn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/EndTurn", ReplyAction="http://tempuri.org/IServerMethods/EndTurnResponse")]
        System.Threading.Tasks.Task EndTurnAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/UpdateMap", ReplyAction="http://tempuri.org/IServerMethods/UpdateMapResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MedievalWarfare.Common.Utility.ConstructBuilding))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MedievalWarfare.Common.Utility.MoveUnit))]
        void UpdateMap(MedievalWarfare.Common.Utility.Command command);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServerMethods/UpdateMap", ReplyAction="http://tempuri.org/IServerMethods/UpdateMapResponse")]
        System.Threading.Tasks.Task UpdateMapAsync(MedievalWarfare.Common.Utility.Command command);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerMethodsCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMethods/ActionResult")]
        void ActionResult(bool result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMethods/StartTurn")]
        void StartTurn(MedievalWarfare.Common.Game mapInfo);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMethods/Update")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MedievalWarfare.Common.Utility.ConstructBuilding))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MedievalWarfare.Common.Utility.MoveUnit))]
        void Update(MedievalWarfare.Common.Utility.Command command);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServerMethods/EndGame")]
        void EndGame(bool winner);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServerMethodsChannel : MedievalWarfare.Client.Proxy.IServerMethods, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServerMethodsClient : System.ServiceModel.DuplexClientBase<MedievalWarfare.Client.Proxy.IServerMethods>, MedievalWarfare.Client.Proxy.IServerMethods {
        
        public ServerMethodsClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServerMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServerMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerMethodsClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServerMethodsClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Join(MedievalWarfare.Common.Player info) {
            base.Channel.Join(info);
        }
        
        public System.Threading.Tasks.Task JoinAsync(MedievalWarfare.Common.Player info) {
            return base.Channel.JoinAsync(info);
        }
        
        public void Leave(MedievalWarfare.Common.Player info) {
            base.Channel.Leave(info);
        }
        
        public System.Threading.Tasks.Task LeaveAsync(MedievalWarfare.Common.Player info) {
            return base.Channel.LeaveAsync(info);
        }
        
        public MedievalWarfare.Common.Map GetGameState() {
            return base.Channel.GetGameState();
        }
        
        public System.Threading.Tasks.Task<MedievalWarfare.Common.Map> GetGameStateAsync() {
            return base.Channel.GetGameStateAsync();
        }
        
        public void EndTurn() {
            base.Channel.EndTurn();
        }
        
        public System.Threading.Tasks.Task EndTurnAsync() {
            return base.Channel.EndTurnAsync();
        }
        
        public void UpdateMap(MedievalWarfare.Common.Utility.Command command) {
            base.Channel.UpdateMap(command);
        }
        
        public System.Threading.Tasks.Task UpdateMapAsync(MedievalWarfare.Common.Utility.Command command) {
            return base.Channel.UpdateMapAsync(command);
        }
    }
}
